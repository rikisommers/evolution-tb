"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
const errors_1 = __importDefault(require("./errors"));
const editor_layout_1 = require("../../utils/editor-layout");
class FieldGroupsCountValidator {
    constructor() {
        this.hooks = [__1.ApiHook.SaveEditorInterface];
    }
    validate(editorInterface) {
        const errors = [];
        const editorLayout = editorInterface.getEditorLayout();
        const groupsCount = (0, editor_layout_1.collectFieldGroupIds)(editorLayout).length;
        const tabsCount = editorLayout.length;
        if (groupsCount < editor_layout_1.MIN_GROUPS) {
            errors.push({
                type: 'InvalidPayload',
                message: errors_1.default.editorLayout.TOO_FEW_FIELD_GROUPS()
            });
        }
        if (groupsCount - tabsCount > editor_layout_1.MAX_FIELD_SETS) {
            errors.push({
                type: 'InvalidPayload',
                message: errors_1.default.editorLayout.TOO_MANY_FIELD_SETS()
            });
        }
        return errors;
    }
}
exports.default = FieldGroupsCountValidator;
//# sourceMappingURL=field-groups-count.js.map