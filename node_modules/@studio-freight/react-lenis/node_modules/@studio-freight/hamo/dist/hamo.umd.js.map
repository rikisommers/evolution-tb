{"version":3,"file":"hamo.umd.js","sources":["../src/hooks/use-is-client.js","../src/hooks/use-rect.js","../src/hooks/use-debug.js","../src/hooks/use-document-ready-state.js","../src/hooks/use-frame.js","../src/hooks/use-interval.js","../src/hooks/use-is-touch-device.js","../src/hooks/use-is-visible.js","../src/hooks/use-media-query.js","../src/hooks/use-click-outside-event.js","../src/hooks/use-slots.js"],"sourcesContent":["// This component is used to check if the window object is present.\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport function useIsClient() {\r\n  const [isClient, setClient] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setClient(true)\r\n  }, [])\r\n\r\n  return isClient\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\nimport { throttle } from 'throttle-debounce'\r\n\r\n// offsetTop function returns the offsetTop value of a DOM element.\r\n// The offsetTop value is the distance between the top of the element\r\n// and the top of the viewport.\r\nexport function offsetTop(element, accumulator = 0) {\r\n  const top = accumulator + element.offsetTop\r\n  if (element.offsetParent) {\r\n    return offsetTop(element.offsetParent, top)\r\n  }\r\n  return top\r\n}\r\n\r\n// offsetLeft function returns the offsetLeft value of a DOM element.\r\n// The offsetLeft value is the distance between the left of the element\r\n// and the left of the viewport.\r\nexport function offsetLeft(element, accumulator = 0) {\r\n  const left = accumulator + element.offsetLeft\r\n  if (element.offsetParent) {\r\n    return offsetLeft(element.offsetParent, left)\r\n  }\r\n  return left\r\n}\r\n\r\nexport function useRect({\r\n  // ignoreTransform = true,\r\n  lazy = false,\r\n  debounce = 1000,\r\n} = {}) {\r\n  const element = useRef()\r\n  const resizeObserver = useRef()\r\n\r\n  const [rect, setRect] = useState({})\r\n  const lazyRect = useRef(rect)\r\n\r\n  const resize = useCallback(() => {\r\n    if (element.current) {\r\n      const top = offsetTop(element.current)\r\n      const left = offsetLeft(element.current)\r\n\r\n      lazyRect.current = { ...lazyRect.current, top, left }\r\n      if (!lazy) {\r\n        setRect(lazyRect.current)\r\n      }\r\n    }\r\n  }, [lazy])\r\n\r\n  // resize if body height changes\r\n  useEffect(() => {\r\n    const callback = throttle(debounce, resize)\r\n    const resizeObserver = new ResizeObserver(callback)\r\n    resizeObserver.observe(document.body)\r\n\r\n    return () => {\r\n      resizeObserver.disconnect()\r\n      callback.cancel({ upcomingOnly: true })\r\n    }\r\n  }, [debounce, resize])\r\n\r\n  const onResizeObserver = useCallback(\r\n    ([entry]) => {\r\n      const { width, height } = entry.contentRect\r\n\r\n      lazyRect.current = { ...lazyRect.current, width, height }\r\n      if (!lazy) {\r\n        setRect(lazyRect.current)\r\n      }\r\n    },\r\n    [lazy]\r\n  )\r\n\r\n  const getRect = useCallback(() => lazyRect.current, [])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // avoid strict mode double execution\r\n      if (process.env.NODE_ENV !== 'development') {\r\n        // disconnect resizeObserver on unmount\r\n        resizeObserver.current?.disconnect()\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const setRef = useCallback(\r\n    (node) => {\r\n      if (!node || node === element.current) return\r\n\r\n      resizeObserver.current?.disconnect()\r\n      resizeObserver.current = new ResizeObserver(onResizeObserver)\r\n      resizeObserver.current.observe(node)\r\n      element.current = node\r\n    },\r\n    [resize]\r\n  )\r\n\r\n  return [setRef, lazy ? getRect : rect]\r\n}\r\n","/**\r\n * @summary A hook that returns true if the current window URL contains the\r\n *   string #debug or if we're in development mode.\r\n * @returns {Boolean} True if current window URL contains the string #debug or\r\n *   if we're in development mode, false otherwise.\r\n */\r\n\r\nimport { useMemo } from 'react'\r\nimport { useIsClient } from './use-is-client'\r\n\r\nexport function useDebug() {\r\n  const isClient = useIsClient()\r\n  const debug = useMemo(\r\n    () =>\r\n      isClient &&\r\n      (window.location.href.includes('#debug') || process.env.NODE_ENV === 'development') &&\r\n      !window.location.href.includes('#production'),\r\n    [isClient]\r\n  )\r\n\r\n  return debug\r\n}\r\n","// useDocumentReadyState.js\r\n// This code is a custom hook that returns the current document.readyState\r\n// The useLayoutEffect hook is used to set the state of the document\r\n// The useEffect hook is used to set the state of the document to 'complete' when the document is ready\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport function useDocumentReadyState() {\r\n  const [readyState, setReadyState] = useState(() => {\r\n    if (typeof document !== 'undefined') {\r\n      return document.readyState\r\n    }\r\n    return 'loading'\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (typeof document === 'undefined') return\r\n\r\n    setReadyState(document.readyState)\r\n\r\n    function onStateChange() {\r\n      setReadyState(document.readyState)\r\n    }\r\n\r\n    document.addEventListener('readystatechange', onStateChange, false)\r\n\r\n    return () => document.removeEventListener('readystatechange', onStateChange, false)\r\n  }, [])\r\n\r\n  return readyState\r\n}\r\n","/**\r\n * Creates a requestAnimationFrame loop and manages the lifecycle of the callback.\r\n * @param {Function} callback - A function that is called every frame.\r\n * @param {Number} priority - A number that determines the order in which the callback is called.\r\n */\r\nimport { raf } from '@studio-freight/tempus'\r\nimport { useEffect } from 'react'\r\n\r\nexport function useFrame(callback, priority = 0) {\r\n  useEffect(() => {\r\n    if (callback) {\r\n      raf.add(callback, priority)\r\n\r\n      return () => raf.remove(callback)\r\n    }\r\n  }, [callback, priority])\r\n}\r\n","/**\r\n * This function allows you to set an interval in a functional component\r\n * @param {function} callback - The callback function\r\n * @param {number} delay - The delay between each interval\r\n */\r\n\r\nimport { useEffect, useRef } from 'react'\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef()\r\n  const intervalId = useRef()\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  })\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current()\r\n    }\r\n\r\n    if (delay !== null) {\r\n      intervalId.current = setInterval(tick, delay)\r\n      return () => clearInterval(intervalId.current)\r\n    }\r\n  }, [delay])\r\n\r\n  return () => clearInterval(intervalId.current)\r\n}\r\n","/*\r\n  This hook checks if the device has a touch screen. It checks for the touchstart event,\r\n  as well as the maxTouchPoints property on the navigator object. It also checks the\r\n  msMaxTouchPoints property, which is specific to Microsoft browsers.\r\n*/\r\n\r\nimport { useCallback, useEffect, useState } from 'react'\r\n\r\nexport function useIsTouchDevice() {\r\n  const check = useCallback(\r\n    () => 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0,\r\n    []\r\n  )\r\n\r\n  const [isTouchDevice, setIsTouchDevice] = useState(undefined)\r\n\r\n  const onResize = useCallback(() => {\r\n    setIsTouchDevice(check())\r\n  }, [check])\r\n\r\n  useEffect(() => {\r\n    onResize()\r\n    window.addEventListener('resize', onResize, { passive: true })\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', onResize, { passive: true })\r\n    }\r\n  }, [onResize])\r\n\r\n  return isTouchDevice\r\n}\r\n","// useIsVisible is a custom hook that allows you to detect when an element is\r\n// visible on the screen. It takes an object as an argument, and returns an object\r\n// with two properties: setRef and inView.\r\n\r\nimport { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\nexport function useIsVisible({ root = null, rootMargin = '0px', threshold = 1.0, once = false } = {}) {\r\n  const observer = useRef()\r\n  const ref = useRef()\r\n  const [inView, setInView] = useState(false)\r\n\r\n  const setRef = useCallback((node) => {\r\n    if (!ref.current) {\r\n      ref.current = node\r\n    }\r\n  }, [])\r\n\r\n  const callbackFunction = useCallback((entries) => {\r\n    const [entry] = entries\r\n    setInView(entry.isIntersecting)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      observer.current = new IntersectionObserver(callbackFunction, {\r\n        root,\r\n        rootMargin,\r\n        threshold,\r\n      })\r\n      observer.current.observe(ref.current)\r\n    }\r\n    return () => {\r\n      if (observer.current) {\r\n        observer.current.disconnect()\r\n      }\r\n    }\r\n  }, [callbackFunction])\r\n\r\n  useEffect(() => {\r\n    if (once && inView) {\r\n      observer.current.disconnect()\r\n    }\r\n  }, [inView])\r\n\r\n  return { setRef, inView }\r\n}\r\n","import { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { useIsClient } from './use-is-client'\r\n\r\n/**\r\n * @name useMediaQuery\r\n * @description A React hook that detects whether a media query is true or false.\r\n * @param {string} queryString - The media query to test against.\r\n * @returns {boolean} - Whether the media query is true or false.\r\n */\r\n\r\nexport function useMediaQuery(queryString) {\r\n  const isClient = useIsClient()\r\n\r\n  const mediaQuery = useMemo(() => {\r\n    if (isClient) {\r\n      try {\r\n        return window.matchMedia(queryString)\r\n      } catch (error) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          console.error(error)\r\n        }\r\n      }\r\n    }\r\n\r\n    return null\r\n  }, [queryString, isClient])\r\n\r\n  const [isMatch, setIsMatch] = useState(undefined)\r\n\r\n  const onChange = useCallback(({ matches }) => {\r\n    setIsMatch(matches)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (mediaQuery) {\r\n      onChange(mediaQuery)\r\n\r\n      mediaQuery.addEventListener('change', onChange, { passive: true })\r\n\r\n      return () => {\r\n        mediaQuery.removeEventListener('change', onChange, { passive: true })\r\n      }\r\n    }\r\n  }, [mediaQuery, onChange, isClient])\r\n\r\n  return isMatch\r\n}\r\n","/**\r\n * useOutsideClickEvent - custom hook that listens for clicks outside of a component\r\n * @param {Object} ref - React ref for the element to listen for clicks outside of\r\n * @param {Function} callback - callback function to call when a click outside of the element is detected\r\n */\r\n\r\nimport { useCallback, useEffect } from 'react'\r\n\r\nexport function useOutsideClickEvent(ref, callback) {\r\n  const handleClickOutside = useCallback(\r\n    (event) => {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        callback()\r\n      }\r\n    },\r\n    [ref, callback]\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      document.addEventListener('mousedown', handleClickOutside)\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside)\r\n      }\r\n    }\r\n  }, [handleClickOutside, ref])\r\n}\r\n","// This code is used to extract the contents of a component's children and return them as an array.\r\n// The code accepts two arguments, the names of the components that it should extract, and the children to extract from.\r\n// The code returns an array of the children of the components passed in the types argument.\r\n// based on:\r\n// https://medium.com/swlh/bring-vue-named-slots-to-react-87684188f18e\r\n\r\nimport { useMemo } from 'react'\r\n\r\nexport function useSlots(types = [], children = []) {\r\n  const _children = useMemo(() => children && [children].flat(), [children])\r\n  const _types = useMemo(() => types && [types].flat(), [types])\r\n  const slots = useMemo(() => {\r\n    if (!_children || !_types) {\r\n      return\r\n    }\r\n\r\n    const slots = _types.map((type) => _children.find((el) => el.type === type)?.props.children)\r\n\r\n    return types[0] ? slots : slots[0]\r\n  }, [_children, _types])\r\n\r\n  return slots\r\n}\r\n"],"names":["useIsClient","_useState","useState","isClient","setClient","useEffect","offsetTop","element","accumulator","top","offsetParent","offsetLeft","left","useDebug","useMemo","window","location","href","includes","process","env","NODE_ENV","document","readyState","setReadyState","addEventListener","onStateChange","removeEventListener","callback","priority","raf","add","remove","delay","useRef","savedCallback","current","intervalId","setInterval","clearInterval","check","useCallback","navigator","maxTouchPoints","msMaxTouchPoints","undefined","isTouchDevice","setIsTouchDevice","onResize","passive","_temp","_ref","_ref$root","root","rootMargin","_ref$rootMargin","_ref$threshold","threshold","once","_ref$once","observer","ref","inView","setInView","setRef","node","callbackFunction","entries","isIntersecting","IntersectionObserver","observe","disconnect","queryString","mediaQuery","matchMedia","error","console","isMatch","setIsMatch","matches","onChange","event","contains","target","handleClickOutside","useRect","lazy","_ref$lazy","_ref$debounce","debounce","resizeObserver","rect","setRect","lazyRect","resize","throttle","ResizeObserver","body","cancel","upcomingOnly","onResizeObserver","_ref2","contentRect","_extends","width","_entry$contentRect","height","_resizeObserver$curre","_resizeObserver$curre2","getRect","types","children","_children","flat","_types","slots","map","type","_children$find","find","el","props"],"mappings":"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"}