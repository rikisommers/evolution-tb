import{useCallback as e,useEffect as n,useState as t,useMemo as r,useRef as o}from"react";import c from"@studio-freight/tempus";import{throttle as i}from"throttle-debounce";function u(t,r){const o=e(e=>{t.current&&!t.current.contains(e.target)&&r()},[t,r]);n(()=>{if(t.current)return document.addEventListener("mousedown",o),()=>{document.removeEventListener("mousedown",o)}},[o,t])}function s(){const[e,r]=t(!1);return n(()=>{r(!0)},[]),e}function a(){const e=s();return r(()=>{if(!e)return;const n=window.location,t=n.href,r=new URLSearchParams(n.search),o=t.includes("#debug")||t.includes("/_debug")||r.has("debug")||"development"===process.env.NODE_ENV,c=t.includes("#production")||r.has("production");return o&&!c},[e])}function d(){const[e,r]=t();return n(()=>{function e(){r(document.readyState)}return document.addEventListener("readystatechange",e,!1),e(),()=>document.removeEventListener("readystatechange",e,!1)},[]),e}function f(e,t=0){n(()=>{if(e)return c.add(e,t),()=>c.remove(e)},[e,t])}function l({root:r=null,rootMargin:c="0px",threshold:i=0,once:u=!1,lazy:s=!1,callback:a=(()=>{})}={},d=[]){const f=o({}),[l,h]=t({}),[m,v]=t();n(()=>{if(!m)return;const e=new IntersectionObserver(([n])=>{s?f.current=n:h(n),a(n),u&&n.isIntersecting&&e.disconnect()},{root:r,rootMargin:c,threshold:i});return e.observe(m),()=>{e.disconnect()}},[m,r,c,i,s,u,...d]);const w=e(()=>f.current,[]);return[v,s?w:l]}function h(e,t=1e3,r=[]){n(()=>{const n=setInterval(e,t);return()=>clearInterval(n)},[t,...r])}function m(){const[e,r]=t();return n(()=>{function e(){r("ontouchstart"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0)}return window.addEventListener("resize",e,!1),e(),()=>{window.removeEventListener("resize",e,!1)}},[]),e}function v(e){const[r,o]=t();return n(()=>{const n=window.matchMedia(e);function t(){o(n.matches)}return n.addEventListener("change",t,!1),t(),()=>n.removeEventListener("change",t,!1)},[e]),r}function w(){return w=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},w.apply(this,arguments)}function b({lazy:r=!1,debounce:c=1e3,box:u="border-box",callback:s=(()=>{})}={},a=[]){const d=o({}),[f,l]=t({}),[h,m]=t();n(()=>{if(!h)return;const e=i(c,([e])=>{d.current=e,s(e),r||l(e)}),n=new ResizeObserver(e);return n.observe(h,{box:u}),()=>{n.disconnect(),e.cancel()}},[h,r,c,u,...a]);const v=e(()=>d.current,[]);return[m,r?v:f]}function g(e,n=0){const t=n+e.offsetTop;return e.offsetParent?g(e.offsetParent,t):t}function p(e,n=0){const t=n+e.offsetLeft;return e.offsetParent?p(e.offsetParent,t):t}function z({ignoreTransform:r=!1,lazy:c=!1,debounce:u=1e3,resizeDebounce:s=u,callback:a=(()=>{})}={},d=[]){const[f,l]=t(),[h,m]=t({}),v=o({}),[z]=b({lazy:!0,debounce:s,callback:e=>{const n=e.borderBoxSize[0].inlineSize,t=e.borderBoxSize[0].blockSize;v.current.width=n,v.current.height=t,a(v.current),c||m(e=>w({},e,{width:n,height:t}))}},[c,s,...d]);n(()=>{if(!f)return;const e=i(u,()=>{let e,n;if(r)e=g(f),n=p(f);else{const t=f.getBoundingClientRect();e=t.top+window.scrollY,n=t.left+window.scrollX}v.current.top=e,v.current.left=n,a(v.current),c||m(t=>w({},t,{top:e,left:n}))}),n=new ResizeObserver(e);return n.observe(document.body),()=>{n.disconnect(),e.cancel()}},[f,c,u,r,...d]);const E=e(()=>v.current,[]);return[e=>{l(e),z(e)},c?E:h]}function E(e=[],n=[]){const t=r(()=>n&&[n].flat(),[n]),o=r(()=>e&&[e].flat(),[e]);return r(()=>{if(!t||!o)return;const n=o.map(e=>{var n;return null==(n=t.find(n=>n.type===e))?void 0:n.props.children});return e[0]?n:n[0]},[t,o])}function y(){const[e,r]=t(),[o,c]=t();return n(()=>{function e(){r(Math.min(window.innerWidth,document.documentElement.clientWidth)),c(Math.min(window.innerHeight,document.documentElement.clientHeight))}return window.addEventListener("resize",e,!1),e(),()=>window.removeEventListener("resize",e,!1)},[]),{width:e,height:o}}export{a as useDebug,d as useDocumentReadyState,f as useFrame,l as useIntersectionObserver,h as useInterval,s as useIsClient,m as useIsTouchDevice,v as useMediaQuery,u as useOutsideClickEvent,z as useRect,b as useResizeObserver,E as useSlots,y as useWindowSize};
//# sourceMappingURL=hamo.modern.mjs.map
