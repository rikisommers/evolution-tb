{"version":3,"file":"hamo.js","sources":["../src/hooks/use-is-client.js","../src/hooks/use-resize-observer.js","../src/hooks/use-rect.js","../src/hooks/use-debug.js","../src/hooks/use-document-ready-state.js","../src/hooks/use-frame.js","../src/hooks/use-intersection-observer.js","../src/hooks/use-interval.js","../src/hooks/use-is-touch-device.js","../src/hooks/use-media-query.js","../src/hooks/use-click-outside-event.js","../src/hooks/use-slots.js","../src/hooks/use-window-size.js"],"sourcesContent":["// This component is used to check if the window object is present.\nimport { useEffect, useState } from 'react'\n\nexport function useIsClient() {\n  const [isClient, setClient] = useState(false)\n\n  useEffect(() => {\n    setClient(true)\n  }, [])\n\n  return isClient\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { throttle } from 'throttle-debounce'\n\n/**\n * useResizeObserver - observe elements dimensions using ResizeObserver\n * @param {Boolean} lazy - should return a state or not\n * @param {Number} debounce - minimum delay between two ResizeObserver computations\n * @param {String} box - ResizeObserver parameter\n * @param {Function} callback - called on value change\n * @param {Array} deps - props that should trigger a new computation\n */\n\nexport function useResizeObserver(\n  { lazy = false, debounce = 1000, box = 'border-box', callback = () => {} } = {},\n  deps = []\n) {\n  const entryRef = useRef({})\n  const [entry, setEntry] = useState({})\n  const [element, setElement] = useState()\n\n  useEffect(() => {\n    if (!element) return\n\n    const onResize = throttle(debounce, ([entry]) => {\n      entryRef.current = entry\n\n      callback(entry)\n\n      if (!lazy) {\n        setEntry(entry)\n      }\n    })\n\n    const resizeObserver = new ResizeObserver(onResize)\n    resizeObserver.observe(element, { box })\n\n    return () => {\n      resizeObserver.disconnect()\n      onResize.cancel()\n    }\n  }, [element, lazy, debounce, box, ...deps])\n\n  const get = useCallback(() => entryRef.current, [])\n\n  return [setElement, lazy ? get : entry]\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { throttle } from 'throttle-debounce'\nimport { useResizeObserver } from './use-resize-observer'\n\n// offsetTop function returns the offsetTop value of a DOM element.\n// The offsetTop value is the distance between the top of the element\n// and the top of the viewport.\nexport function offsetTop(element, accumulator = 0) {\n  const top = accumulator + element.offsetTop\n  if (element.offsetParent) {\n    return offsetTop(element.offsetParent, top)\n  }\n  return top\n}\n\n// offsetLeft function returns the offsetLeft value of a DOM element.\n// The offsetLeft value is the distance between the left of the element\n// and the left of the viewport.\nexport function offsetLeft(element, accumulator = 0) {\n  const left = accumulator + element.offsetLeft\n  if (element.offsetParent) {\n    return offsetLeft(element.offsetParent, left)\n  }\n  return left\n}\n\n/**\n * useRect - observe elements BoundingRect\n * @param {boolean} ignoreTransform - should include transform in the returned rect or not\n * @param {boolean} lazy - should return a state or not\n * @param {number} debounce - minimum delay between two rect computations\n * @param {number} resizeDebounce - minimum delay between two ResizeObserver computations\n * @param {Function} callback - called on value change\n * @param {Array} deps - props that should trigger a new rect computation\n */\n\nexport function useRect(\n  { ignoreTransform = false, lazy = false, debounce = 1000, resizeDebounce = debounce, callback = () => {} } = {},\n  deps = []\n) {\n  const [element, setElement] = useState()\n  const [rect, setRect] = useState({})\n  const rectRef = useRef({})\n  const [setResizeObserverElement] = useResizeObserver(\n    {\n      lazy: true,\n      debounce: resizeDebounce,\n      callback: (entry) => {\n        // includes padding and border\n        const width = entry.borderBoxSize[0].inlineSize\n        const height = entry.borderBoxSize[0].blockSize\n\n        rectRef.current.width = width\n        rectRef.current.height = height\n\n        callback(rectRef.current)\n\n        if (!lazy) {\n          setRect((rect) => ({\n            ...rect,\n            width,\n            height,\n          }))\n        }\n      },\n    },\n    [lazy, resizeDebounce, ...deps]\n  )\n\n  // resize if body height changes\n  useEffect(() => {\n    if (!element) return\n\n    const onBodyResize = throttle(debounce, () => {\n      let top, left\n\n      if (ignoreTransform) {\n        top = offsetTop(element)\n        left = offsetLeft(element)\n      } else {\n        const rect = element.getBoundingClientRect()\n        top = rect.top + window.scrollY\n        left = rect.left + window.scrollX\n      }\n\n      rectRef.current.top = top\n      rectRef.current.left = left\n\n      callback(rectRef.current)\n\n      if (!lazy) {\n        setRect((rect) => ({\n          ...rect,\n          top,\n          left,\n        }))\n      }\n    })\n    const resizeObserver = new ResizeObserver(onBodyResize)\n    resizeObserver.observe(document.body)\n\n    return () => {\n      resizeObserver.disconnect()\n      onBodyResize.cancel()\n    }\n  }, [element, lazy, debounce, ignoreTransform, ...deps])\n\n  const getRect = useCallback(() => rectRef.current, [])\n\n  return [\n    (node) => {\n      setElement(node)\n      setResizeObserverElement(node)\n    },\n    lazy ? getRect : rect,\n  ]\n}\n","import { useMemo } from 'react'\nimport { useIsClient } from './use-is-client'\n\nexport function useDebug() {\n  const isClient = useIsClient()\n\n  const debug = useMemo(() => {\n    if (!isClient) return undefined\n\n    const location = window.location\n    const search = location.search\n    const href = location.href\n    const searchParams = new URLSearchParams(search)\n\n    const isDebug =\n      href.includes('#debug') || // localhost:3000/#debug\n      href.includes('/_debug') || // localhost:3000/_debug\n      searchParams.has('debug') || // localhost:3000/?debug\n      process.env.NODE_ENV === 'development' // localhost:3000\n\n    const isProduction =\n      href.includes('#production') || // localhost:3000/#production\n      searchParams.has('production') // localhost:3000/?production\n\n    return isDebug && !isProduction\n  }, [isClient])\n\n  return debug\n}\n","// useDocumentReadyState.js\n// This code is a custom hook that returns the current document.readyState\n// The useLayoutEffect hook is used to set the state of the document\n// The useEffect hook is used to set the state of the document to 'complete' when the document is ready\n\nimport { useEffect, useState } from 'react'\n\n/**\n * @name useDocumentReadyState\n * @description A React hook that listen to document.readyState.\n * @returns {string} document.readyState\n */\n\nexport function useDocumentReadyState() {\n  const [readyState, setReadyState] = useState()\n\n  useEffect(() => {\n    function onStateChange() {\n      setReadyState(document.readyState)\n    }\n\n    document.addEventListener('readystatechange', onStateChange, false)\n    onStateChange()\n\n    return () => document.removeEventListener('readystatechange', onStateChange, false)\n  }, [])\n\n  return readyState\n}\n","/**\n * Creates a requestAnimationFrame loop and manages the lifecycle of the callback.\n * @param {Function} callback - A function that is called every frame.\n * @param {Number} priority - A number that determines the order in which the callback is called.\n */\n\nimport Tempus from '@studio-freight/tempus'\nimport { useEffect } from 'react'\n\nexport function useFrame(callback, priority = 0) {\n  useEffect(() => {\n    if (callback) {\n      Tempus.add(callback, priority)\n\n      return () => Tempus.remove(callback)\n    }\n  }, [callback, priority])\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * @name useIntersectionObserver\n * @description A React hook that oberves element visibility using IntersectionObserver.\n * @param {HTMLElement} root\n * @param {string} rootMargin\n * @param {number} threshold\n * @param {boolean} once\n * @param {boolean} lazy\n * @param {function} callback\n * @param {array} deps\n * @returns {array} [setElement, entry]\n */\n\nexport function useIntersectionObserver(\n  { root = null, rootMargin = '0px', threshold = 0, once = false, lazy = false, callback = () => {} } = {},\n  deps = []\n) {\n  const entryRef = useRef({})\n  const [entry, setEntry] = useState({})\n  const [element, setElement] = useState()\n\n  useEffect(() => {\n    if (!element) return\n\n    const intersection = new IntersectionObserver(\n      ([entry]) => {\n        if (lazy) {\n          entryRef.current = entry\n        } else {\n          setEntry(entry)\n        }\n\n        callback(entry)\n\n        if (once && entry.isIntersecting) intersection.disconnect()\n      },\n      {\n        root,\n        rootMargin,\n        threshold,\n      }\n    )\n    intersection.observe(element)\n\n    return () => {\n      intersection.disconnect()\n    }\n  }, [element, root, rootMargin, threshold, lazy, once, ...deps])\n\n  const get = useCallback(() => entryRef.current, [])\n\n  return [setElement, lazy ? get : entry]\n}\n","/**\n * This function allows you to set an interval in a functional component\n * @param {function} callback - The callback function\n * @param {number} delay - The delay between each interval\n */\n\nimport { useEffect } from 'react'\n\nexport function useInterval(callback, delay = 1000, deps = []) {\n  useEffect(() => {\n    const interval = setInterval(callback, delay)\n    return () => clearInterval(interval)\n  }, [delay, ...deps])\n}\n","/*\n  This hook checks if the device has a touch screen. It checks for the touchstart event,\n  as well as the maxTouchPoints property on the navigator object. It also checks the\n  msMaxTouchPoints property, which is specific to Microsoft browsers.\n*/\n\nimport { useEffect, useState } from 'react'\n\n/**\n * @name useIsTouchDevice\n * @description A React hook that detects if the device supports touch.\n * @returns {boolean} Whether the device supports touch or not.\n */\n\nexport function useIsTouchDevice() {\n  const [isTouchDevice, setIsTouchDevice] = useState()\n\n  useEffect(() => {\n    function onResize() {\n      setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)\n    }\n\n    window.addEventListener('resize', onResize, false)\n    onResize()\n\n    return () => {\n      window.removeEventListener('resize', onResize, false)\n    }\n  }, [])\n\n  return isTouchDevice\n}\n","import { useEffect, useState } from 'react'\n\n/**\n * @name useMediaQuery\n * @description A React hook that detects whether a media query is true or false.\n * @param {string} queryString The media query to test against.\n * @returns {boolean} Whether the media query is true or false.\n */\n\nexport function useMediaQuery(queryString) {\n  const [isMatch, setIsMatch] = useState()\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(queryString)\n\n    function onChange() {\n      setIsMatch(mediaQuery.matches)\n    }\n\n    mediaQuery.addEventListener('change', onChange, false)\n    onChange()\n\n    return () => mediaQuery.removeEventListener('change', onChange, false)\n  }, [queryString])\n\n  return isMatch\n}\n","/**\n * useOutsideClickEvent - custom hook that listens for clicks outside of a component\n * @param {Object} ref - React ref for the element to listen for clicks outside of\n * @param {Function} callback - callback function to call when a click outside of the element is detected\n */\n\nimport { useCallback, useEffect } from 'react'\n\nexport function useOutsideClickEvent(ref, callback) {\n  const handleClickOutside = useCallback(\n    (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        callback()\n      }\n    },\n    [ref, callback]\n  )\n\n  useEffect(() => {\n    if (ref.current) {\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside)\n      }\n    }\n  }, [handleClickOutside, ref])\n}\n","// This code is used to extract the contents of a component's children and return them as an array.\n// The code accepts two arguments, the names of the components that it should extract, and the children to extract from.\n// The code returns an array of the children of the components passed in the types argument.\n// based on:\n// https://medium.com/swlh/bring-vue-named-slots-to-react-87684188f18e\n\nimport { useMemo } from 'react'\n\nexport function useSlots(types = [], children = []) {\n  const _children = useMemo(() => children && [children].flat(), [children])\n  const _types = useMemo(() => types && [types].flat(), [types])\n  const slots = useMemo(() => {\n    if (!_children || !_types) {\n      return\n    }\n\n    const slots = _types.map((type) => _children.find((el) => el.type === type)?.props.children)\n\n    return types[0] ? slots : slots[0]\n  }, [_children, _types])\n\n  return slots\n}\n","import { useEffect, useState } from 'react'\n\n/**\n * @name useWindowSize\n * @description A React hook that listens to window size.\n * @returns {object} { width, height }\n */\n\nexport function useWindowSize() {\n  const [width, setWidth] = useState()\n  const [height, setHeight] = useState()\n\n  useEffect(() => {\n    function onWindowRezise() {\n      setWidth(Math.min(window.innerWidth, document.documentElement.clientWidth))\n      setHeight(Math.min(window.innerHeight, document.documentElement.clientHeight))\n    }\n\n    window.addEventListener('resize', onWindowRezise, false)\n\n    onWindowRezise()\n\n    return () => window.removeEventListener('resize', onWindowRezise, false)\n  }, [])\n\n  return { width, height }\n}\n"],"names":["useIsClient","_useState","useState","isClient","setClient","useEffect","useResizeObserver","_temp","deps","_ref","lazy","_ref$lazy","debounce","_ref$debounce","box","_ref$box","callback","_ref$callback","entryRef","useRef","entry","setEntry","element","setElement","onResize","throttle","_ref2","current","ResizeObserver","resizeObserver","observe","disconnect","cancel","useCallback","get","offsetTop","accumulator","top","offsetParent","offsetLeft","left","useDebug","useMemo","location","window","href","searchParams","URLSearchParams","search","isDebug","includes","has","process","env","NODE_ENV","isProduction","readyState","setReadyState","onStateChange","document","addEventListener","removeEventListener","priority","Tempus","add","remove","root","_ref$root","rootMargin","_ref$rootMargin","threshold","_ref$threshold","_ref$once","once","intersection","IntersectionObserver","isIntersecting","delay","interval","setInterval","clearInterval","isTouchDevice","setIsTouchDevice","navigator","maxTouchPoints","msMaxTouchPoints","queryString","isMatch","setIsMatch","matchMedia","onChange","mediaQuery","matches","ref","event","contains","target","handleClickOutside","_ref$ignoreTransform","ignoreTransform","resizeDebounce","_ref$resizeDebounce","_useState2","rect","setRect","rectRef","setResizeObserverElement","width","borderBoxSize","inlineSize","height","blockSize","_extends","concat","onBodyResize","_rect","getBoundingClientRect","scrollY","scrollX","body","getRect","node","types","children","_children","flat","_types","slots","map","type","_children$find","find","el","props","setWidth","setHeight","onWindowRezise","Math","min","innerWidth","documentElement","clientWidth","innerHeight","clientHeight"],"mappings":"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"}