"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.agentFromProxy = exports.proxyObjectToString = exports.proxyStringToObject = void 0;
const url_1 = require("url");
const https_proxy_agent_1 = require("https-proxy-agent");
function serializeAuth({ username, password } = {}) {
    if (!username) {
        return '';
    }
    if (!password) {
        return username;
    }
    return `${username}:${password}`;
}
function proxyStringToObject(proxyString) {
    if (!proxyString.startsWith('http')) {
        return proxyStringToObject(`http://${proxyString}`);
    }
    const parsedUrl = new url_1.URL(proxyString);
    const host = parsedUrl.hostname;
    const portString = parsedUrl.port;
    const protocol = parsedUrl.protocol;
    const auth = {
        username: parsedUrl.username,
        password: parsedUrl.password
    };
    const port = parseInt(portString);
    const isHttps = protocol === 'https:';
    if (!auth.username) {
        return { host, port, isHttps };
    }
    return {
        host,
        isHttps,
        port,
        auth
    };
}
exports.proxyStringToObject = proxyStringToObject;
function proxyObjectToString(proxyObject) {
    const { host: hostname, port, auth: authObject } = proxyObject;
    const auth = serializeAuth(authObject);
    const formatted = (0, url_1.format)({ hostname, port, auth });
    // Ugly fix for Node 6 vs Node 8 behavior
    return formatted.replace(/^\/\//, '');
}
exports.proxyObjectToString = proxyObjectToString;
function agentFromProxy(proxy) {
    if (!proxy) {
        return {};
    }
    ['http_proxy', 'https_proxy'].forEach((envStr) => {
        delete process.env[envStr];
        delete process.env[envStr.toUpperCase()];
    });
    return new https_proxy_agent_1.HttpsProxyAgent(proxyObjectToString(proxy));
}
exports.agentFromProxy = agentFromProxy;
