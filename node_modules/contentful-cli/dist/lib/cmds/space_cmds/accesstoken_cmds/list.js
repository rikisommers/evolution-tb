"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const Table = require('cli-table3');
const { handleAsyncError: handle } = require('../../../utils/async');
const { createManagementClient } = require('../../../utils/contentful-clients');
const { copyright } = require('../../../utils/copyright');
const { getHeadersFromOption } = require('../../../utils/headers');
const { log } = require('../../../utils/log');
const paginate = require('../../../utils/pagination');
module.exports.command = 'list';
module.exports.desc = 'List your delivery access tokens';
const epilog = [
    'See more at:\nhttps://github.com/contentful/contentful-cli/tree/master/docs/space/accesstoken/list',
    copyright
].join('\n');
module.exports.builder = yargs => {
    return yargs
        .option('management-token', {
        alias: 'mt',
        describe: 'Contentful management API token',
        type: 'string'
    })
        .option('space-id', { alias: 's', type: 'string', describe: 'Space id' })
        .option('header', {
        alias: 'H',
        type: 'string',
        describe: 'Pass an additional HTTP Header'
    })
        .option('silent', {
        describe: 'Returns the list in raw JSON format instead of a formatted table',
        default: false
    })
        .usage('Usage: contentful space accesstoken list')
        .epilog(epilog);
};
module.exports.aliases = ['ls'];
module.exports.accessTokenList = function accessTokenList({ context, header, silent }) {
    return __awaiter(this, void 0, void 0, function* () {
        const { managementToken, activeSpaceId } = context;
        const client = yield createManagementClient({
            accessToken: managementToken,
            feature: 'space-access_token-list',
            headers: getHeadersFromOption(header)
        });
        const space = yield client.getSpace(activeSpaceId);
        const result = yield paginate({ client: space, method: 'getApiKeys' });
        if (silent) {
            delete result.total;
            delete result.limit;
            delete result.skip;
            delete result.sys;
            log(JSON.stringify(result, null, 2));
        }
        else {
            const tokens = result.items.sort((a, b) => a.name.localeCompare(b.name));
            const table = new Table({
                head: ['Name', 'Description', 'Token']
            });
            tokens.forEach(token => {
                table.push([token.name, token.description, token.accessToken]);
            });
            log(table.toString());
        }
    });
};
module.exports.handler = handle(module.exports.accessTokenList);
