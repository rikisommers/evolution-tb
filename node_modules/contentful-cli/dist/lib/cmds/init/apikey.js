"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPreviewApiKey = void 0;
const getPreviewApiKey = (space, environmentId) => __awaiter(void 0, void 0, void 0, function* () {
    let apiKey;
    const previewApiKeys = yield space.getPreviewApiKeys();
    if (!previewApiKeys.items.length) {
        const createdApiKey = yield space.createApiKey({
            name: space.name,
            environments: [
                {
                    sys: {
                        type: 'Link',
                        linkType: 'Environment',
                        id: environmentId
                    }
                }
            ]
        });
        const previewApiKey = yield space.getPreviewApiKey(createdApiKey.preview_api_key.sys.id);
        apiKey = previewApiKey.accessToken;
    }
    else {
        apiKey = previewApiKeys.items[0].accessToken;
    }
    return apiKey;
});
exports.getPreviewApiKey = getPreviewApiKey;
