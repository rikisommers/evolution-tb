"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const { setContext, storeRuntimeConfig } = require('../context');
const { confirmation } = require('../utils/actions');
const { handleAsyncError: handle } = require('../utils/async');
const { log, warning, success } = require('../utils/log');
module.exports.command = 'logout';
module.exports.desc = 'Logout from Contentful';
function logout() {
    return __awaiter(this, void 0, void 0, function* () {
        warning('This will log you out by deleting the CMA token stored on your system.');
        const confirmed = yield confirmation('Do you want to log out now?');
        if (!confirmed) {
            log('Log out aborted by user.');
            return;
        }
        yield setContext({ managementToken: null });
        yield storeRuntimeConfig();
        success('Successfully logged you out.');
    });
}
module.exports.logout = logout;
module.exports.handler = handle(logout);
