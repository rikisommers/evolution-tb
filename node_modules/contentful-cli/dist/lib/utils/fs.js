"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const fs = require('fs');
const { promisify } = require('util');
const { isAbsolute, resolve } = require('path');
const accessP = promisify(fs.access);
const mkdirP = promisify(fs.mkdir);
module.exports.writeFileP = promisify(fs.writeFile);
module.exports.readFileP = promisify(fs.readFile);
module.exports.currentDir = () => process.cwd();
function getPath(path) {
    if (isAbsolute(path)) {
        return path;
    }
    return resolve(module.exports.currentDir(), path);
}
module.exports.getPath = getPath;
function ensureDir(dirPath) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            yield accessP(dirPath);
        }
        catch (e) {
            if (e.code !== 'ENOENT') {
                throw e;
            }
            yield mkdirP(dirPath);
        }
    });
}
module.exports.ensureDir = ensureDir;
